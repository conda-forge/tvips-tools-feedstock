FindIconv was introduced in CMake 3.11.  This fixes underlinking.
--- tvips/CMakeLists.txt.orig
+++ tvips/CMakeLists.txt
@@ -13,7 +13,7 @@
 # was introduced in CMake 3.4.  XXX Including GNUInstallDirs
 # (introduced in 2.8.5, see http://www.cmake.org/Bug/view.php?id=3976)
 # may be a bit of a wart in a non-GNU package.
-cmake_minimum_required(VERSION 3.2)
+cmake_minimum_required(VERSION 3.11)
 project("TVIPS tools")
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")
@@ -45,7 +45,6 @@ mark_as_advanced(GSL_DIR)
 
 # Any POSIX-compliant version of iconv should be fine.
 find_package(Iconv REQUIRED)
-include_directories("${ICONV_INCLUDE_DIR}")
 
 
 # Any version of libR should be fine.  Unlike find_package(),
@@ -246,7 +245,7 @@ add_executable(cphdr
   "frame.c"
   "util.c")
 add_dependencies(cphdr _update_version_h)
-target_link_libraries(cphdr m)
+target_link_libraries(cphdr Iconv::Iconv m)
 
 add_executable(dan_test
   "compat.c"
@@ -254,7 +253,7 @@ add_executable(dan_test
   "frame.c"
   "util.c")
 add_dependencies(dan_test _update_version_h)
-target_link_libraries(dan_test m)
+target_link_libraries(dan_test Iconv::Iconv m)
 endif()
 
 add_executable(dumpframe
@@ -268,7 +267,7 @@ add_executable(dumpframe
   "util.c")
 add_dependencies(dumpframe _update_version_h)
 target_compile_features(dumpframe PRIVATE cxx_constexpr)
-target_link_libraries(dumpframe ${TIFF_LIBRARIES})
+target_link_libraries(dumpframe Iconv::Iconv ${TIFF_LIBRARIES})
 
 if(BUILD_JIFFIES)
 add_executable(fixpoint
@@ -299,7 +298,7 @@ add_executable(idoc2smv
   "util.c")
 add_dependencies(idoc2smv _update_version_h)
 target_compile_features(idoc2smv PRIVATE cxx_constexpr)
-target_link_libraries(idoc2smv ${TIFF_LIBRARIES})
+target_link_libraries(idoc2smv Iconv::Iconv ${TIFF_LIBRARIES})
 
 if(BUILD_JIFFIES)
 add_executable(img2img
@@ -308,7 +307,7 @@ add_executable(img2img
   "img2img.c"
   "util.c")
 add_dependencies(img2img _update_version_h)
-target_link_libraries(img2img m)
+target_link_libraries(img2img Iconv::Iconv m)
 
 add_executable(img2px
   "compat.c"
@@ -319,7 +318,7 @@ add_executable(img2px
   "util.c")
 add_dependencies(img2px _update_version_h)
 target_compile_features(img2px PRIVATE cxx_constexpr)
-target_link_libraries(img2px ${GSL_LIBRARIES} ${LIBR_LIBRARIES})
+target_link_libraries(img2px Iconv::Iconv ${GSL_LIBRARIES} ${LIBR_LIBRARIES})
 
 add_executable(img2splot
   "compat.c"
@@ -327,7 +326,7 @@ add_executable(img2splot
   "img2splot.c"
   "util.c")
 add_dependencies(img2splot _update_version_h)
-target_link_libraries(img2splot m)
+target_link_libraries(img2splot Iconv::Iconv m)
 
 add_executable(imgcorr
   "compat.c"
@@ -335,7 +334,7 @@ add_executable(imgcorr
   "frame.c"
   "util.c")
 add_dependencies(imgcorr _update_version_h)
-target_link_libraries(imgcorr m)
+target_link_libraries(imgcorr Iconv::Iconv m)
 
 add_executable(imgrevert
   "compat.c"
@@ -343,7 +342,7 @@ add_executable(imgrevert
   "imgrevert.c"
   "util.c")
 add_dependencies(imgrevert _update_version_h)
-target_link_libraries(imgrevert m)
+target_link_libraries(imgrevert Iconv::Iconv m)
 
 add_executable(mike_test
   "compat.c"
@@ -351,7 +350,7 @@ add_executable(mike_test
   "mike_test.c"
   "util.c")
 add_dependencies(mike_test _update_version_h)
-target_link_libraries(mike_test m)
+target_link_libraries(mike_test Iconv::Iconv m)
 endif()
 
 add_executable(mrc2smv
@@ -363,6 +362,7 @@ add_executable(mrc2smv
   "util.c")
 add_dependencies(mrc2smv _update_version_h)
 target_compile_features(mrc2smv PRIVATE cxx_constexpr)
+target_link_libraries(mrc2smv Iconv::Iconv)
 
 if(BUILD_JIFFIES)
 add_executable(rawdump
@@ -379,7 +379,7 @@ add_executable(tiff2raw
   "util.c")
 add_dependencies(tiff2raw _update_version_h)
 target_compile_features(tiff2raw PRIVATE cxx_constexpr)
-target_link_libraries(tiff2raw ${TIFF_LIBRARIES})
+target_link_libraries(tiff2raw Iconv::Iconv ${TIFF_LIBRARIES})
 endif()
 
 add_executable(tiff2smv
@@ -394,7 +394,7 @@ add_dependencies(tiff2smv _update_version_h)
 target_compile_features(tiff2smv PRIVATE cxx_constexpr)
 target_link_libraries(tiff2smv
   ${CMAKE_THREAD_LIBS_INIT}
-  ${ICONV_LIBRARIES}
+  Iconv::Iconv
   ${TIFF_LIBRARIES})
 
 add_executable(tvips2smv
@@ -406,7 +406,7 @@ add_executable(tvips2smv
   "util.c")
 add_dependencies(tvips2smv _update_version_h)
 target_compile_features(tvips2smv PRIVATE cxx_constexpr)
-target_link_libraries(tvips2smv ${ICONV_LIBRARIES})
+target_link_libraries(tvips2smv Iconv::Iconv)
 
 
 # Commands for generating the documentation in the binary directory,
--- tvips/cmake/Modules/FindIconv.cmake
+++ /dev/null
@@ -1,51 +0,0 @@
-# -*- mode: cmake -*-
-
-# - Try to find Iconv
-# Once done this will define
-#
-#  ICONV_FOUND - system has Iconv
-#  ICONV_INCLUDE_DIR - the Iconv include directory
-#  ICONV_LIBRARIES - Link these to use Iconv
-#  ICONV_VERSION - Iconv version string
-#  ICONV_SECOND_ARGUMENT_IS_CONST - the second argument for iconv() is const
-#
-# XXX 2017-06-27: from https://cmake.org/Bug/view.php?id=13517
-
-include(CheckCSourceCompiles)
-
-find_path(ICONV_INCLUDE_DIR iconv.h)
-find_library(ICONV_LIBRARIES NAMES iconv libiconv libiconv-2 c)
-
-# handle the QUIETLY and REQUIRED arguments and set ICONV_FOUND to
-# TRUE if all listed variables are TRUE
-include(FindPackageHandleStandardArgs)
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(ICONV
-  REQUIRED_VARS ICONV_LIBRARIES ICONV_INCLUDE_DIR VERSION_VAR ICONV_VERSION)
-
-if(ICONV_FOUND)
-  set(CMAKE_REQUIRED_INCLUDES "${ICONV_INCLUDE_DIR}")
-  set(CMAKE_REQUIRED_LIBRARIES "${ICONV_LIBRARIES}")
-
-  CHECK_C_SOURCE_COMPILES("
-    #include <iconv.h>
-    int
-    main(int argc, char *argv[])
-    {
-        iconv_t conv = 0;
-        const char* in = 0;
-        size_t ilen = 0;
-        char* out = 0;
-        size_t olen = 0;
-        iconv(conv, &in, &ilen, &out, &olen);
-        return (0);
-    }"
-    ICONV_SECOND_ARGUMENT_IS_CONST )
-
-  set(CMAKE_REQUIRED_INCLUDES)
-  set(CMAKE_REQUIRED_LIBRARIES)
-endif(ICONV_FOUND)
-
-mark_as_advanced(
-  ICONV_INCLUDE_DIR
-  ICONV_LIBRARIES
-  ICONV_SECOND_ARGUMENT_IS_CONST)
--- tvips/config.h.in.orig
+++ tvips/config.h.in
@@ -93,6 +93,20 @@
      realpath(const char *pathname, char *resolved);
 #endif
 
+/* Unambiguous, absolute path to the iconv header, to be used as a
+ * computed include.  The search paths may contain several headers
+ * from different iconv implementations and there is no guarantee that
+ * the header found first corresponds to the desired implementation;
+ * it may not even be compatible with Iconv_LIBRARY.
+ */
+#cmakedefine Iconv_IS_BUILT_IN
+#ifdef Iconv_IS_BUILT_IN
+#    define TVIPS_TOOLS_ICONV_H <iconv.h>
+#else
+#    define TVIPS_TOOLS_ICONV_H "@Iconv_INCLUDE_DIR@/iconv.h"
+#endif
+
+
 /* Declare the compatibility implementations of getprogname(3) and
  * setprogname(3).
  */
--- tvips/frame.c.orig
+++ tvips/frame.c
@@ -30,7 +30,7 @@
 #include <ctype.h>
 #include <errno.h>
 #include <float.h>
-#include <iconv.h>
+#include TVIPS_TOOLS_ICONV_H
 #include <math.h>
 #include <string.h>
 #include <strings.h>
--- tvips/tiff.c.orig
+++ tvips/tiff.c
@@ -42,7 +42,7 @@
 #include <stdlib.h>
 
 #include <errno.h>
-#include <iconv.h>
+#include TVIPS_TOOLS_ICONV_H
 #include <limits.h>
 #include <math.h>
 #include <pthread.h>

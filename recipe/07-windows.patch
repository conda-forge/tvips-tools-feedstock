Fallback implementations for Windows.  These will require config.h to
be included.
--- tvips/fixpoint.c.orig
+++ tvips/fixpoint.c
@@ -637,7 +637,7 @@ main(int argc, char *argv[])
     int verbose;
 
 
-    srandom(time(NULL));
+    srand(time(NULL));
 
     verbose = 1;
 
--- tvips/img2px.c.orig
+++ tvips/img2px.c
@@ -268,7 +268,7 @@ _index_list_permute(struct _index_list *il)
     long int j;
 
     for (i = il->nmemb; i-- > 1; ) {
-        j = lrint(1.0 * i * random() / RAND_MAX);
+        j = lrint(1.0 * i * rand() / RAND_MAX);
 
         if (j < 0)
             fprintf(stderr, "SHUFFLE UNDERFLOW %ld %zd\n", j, i);
@@ -300,7 +300,7 @@ _index_list_permute(struct _index_list *il)
     for (i = 0; i < il->nmemb; i++) {
 //        fprintf(stderr, "  iteration %zd\n", i);
 
-        l = lrint(1.0 * (il->nmemb - i - 1) * random() / RAND_MAX);
+        l = lrint(1.0 * (il->nmemb - i - 1) * rand() / RAND_MAX);
         if (l < 0)
             l = 0; // XXX WARN HERE?
         else if (l + i + 1 > il->nmemb)
--- tvips/metadata.c.orig
+++ tvips/metadata.c
@@ -18,6 +18,9 @@
  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 
+#ifdef HAVE_CONFIG_H
+#    include "config.h"
+#endif
 
 #include <stdio.h>
 
--- tvips/tiff.c.orig
+++ tvips/tiff.c
@@ -681,6 +681,44 @@ tvips_close_tiff(struct tvips_tiff *handle)
 }
 
 
+/* The _strptime() function parses the string @p buf using the format
+ * "%Y:%m:%d %H:%M:%S" and fills the matching data into the structure
+ * @p tm.  _strptime() should assign all fields required by mktime(3).
+ * The function returns 0 on success and non-zero otherwise.
+ */
+static int
+_strptime(const char *buf, struct tm *tm)
+{
+    int i;
+
+
+    /* Skip leading white space, parse day of week.  Parse base-1900
+     * year, month of year, day of month, hours, minutes, and seconds.
+     * Consume any trailing white space.
+     */
+    while (isspace(*buf))
+        buf++;
+    if (sscanf(buf, "%d:%d:%d %d:%d:%d %n",
+               &tm->tm_year, &tm->tm_mon, &tm->tm_mday,
+               &tm->tm_hour, &tm->tm_min, &tm->tm_sec,
+               &i) != 6 || buf[i] != '\0') {
+        return (-1);
+    }
+
+    tm->tm_mon -= 1;
+    tm->tm_year -= 1900;
+    if (tm->tm_mon < 0 || tm->tm_mon > 11 ||
+        tm->tm_mday < 1 || tm->tm_mday > 31 ||
+        tm->tm_hour < 0 || tm->tm_hour > 23 ||
+        tm->tm_min < 0 || tm->tm_min > 59 ||
+        tm->tm_sec < 0 || tm->tm_sec > 60) {
+        return (-1);
+    }
+
+    return (0);
+}
+
+
 int
 tvips_ctime_tiff(
     struct tvips_tiff *handle, const char *zone, struct timespec *tv)
@@ -706,8 +744,7 @@ tvips_ctime_tiff(
             return (-1);
         }
 
-        tiff_datetime = strptime(tiff_datetime, "%Y:%m:%d %H:%M:%S", &tm);
-        if (tiff_datetime == NULL || tiff_datetime[0] != '\0')
+        if (_strptime(tiff_datetime, &tm) != 0)
             return (-1);
 
         tv->tv_sec = mktimez(&tm, zone);
--- tvips/util.c.orig
+++ tvips/util.c
@@ -173,7 +173,7 @@ mkstemplate(const char *template, size_t seqno, int force)
     char *dir, *path;
     size_t len;
     mode_t mode, mode_save;
-    int cc, ch, errno_save, fd;
+    int cc, ch, errno_save, fd, flags;
 
 
     len = strlen(template) + 1;
@@ -198,13 +198,16 @@ mkstemplate(const char *template, size_t seqno, int force)
         return (-1);
     }
 
+    flags = O_WRONLY | O_CREAT | O_TRUNC;
+#ifdef __MINGW32__
+    flags |= _O_BINARY;
+#endif
+
     if (force != 0) {
-        fd = open(
-            path, O_WRONLY | O_CREAT | O_TRUNC, 0666 & ~mode_save);
+        fd = open(path, flags, 0666 & ~mode_save);
 
     } else {
-        fd = open(
-            path, O_WRONLY | O_CREAT | O_EXCL | O_TRUNC, 0666 & ~mode_save);
+        fd = open(path, flags | O_EXCL, 0666 & ~mode_save);
         if (fd == -1 && errno == EEXIST) {
             /* The file exists and user confirmation is required
              * before overwriting it.  There is no point in attempting

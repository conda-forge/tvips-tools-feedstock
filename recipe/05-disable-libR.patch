libR and GSL are not actually used, but img2px should not be
distributed because it includes GPLd code.
--- tvips/CMakeLists.txt.orig
+++ tvips/CMakeLists.txt
@@ -36,18 +36,6 @@ include(GNUInstallDirs)
 include(TestBigEndian)
 
 
-# XXX What version do we really need?  From
-# https://www.gnu.org/software/gsl/NEWS, it appears that
-# gsl_multimin_fdfminimizer_vector_bfgs2 was introduced in version
-# 1.9.  This may all be moot, because it seems FindGSL.cmake does not
-# actually check the version anyway.
-find_package(GSL 1.9 REQUIRED)
-if(NOT EXISTS "${GSL_CBLAS_LIB}")
-  set(GSL_CBLAS_LIB "libgslcblas.so" CACHE FILEPATH "Path to a library." FORCE)
-endif()
-mark_as_advanced(GSL_DIR)
-
-
 # TIFFSwabFloat() was introduced in LibTIFF 4.0.0.
 find_package(TIFF 4.0.0 REQUIRED)
 
@@ -141,10 +129,7 @@ configure_file(
   @ONLY)
 add_definitions(-DHAVE_CONFIG_H)
 include_directories(
-  "${PROJECT_SOURCE_DIR}/R"
-  "/usr/share/R/include"
   "${PROJECT_BINARY_DIR}"
-  "${GSL_INCLUDES}"
   "${TIFF_INCLUDE_DIR}")
 
 
@@ -217,7 +202,6 @@ add_executable(img2px
   "tvips.c"
   "util.c")
 add_dependencies(img2px _update_config_h)
-target_link_libraries(img2px ${GSL_LIBRARIES} "R")
 
 add_executable(img2splot
   "frame.c"
--- tvips/cmake/Modules/FindGSL.cmake
+++ /dev/null
@@ -1,36 +0,0 @@
-# From
-# https://github.com/jedbrown/cmake-modules/blob/master/FindGSL.cmake,
-# pulled 2015-07-09.
-
-# - Find GSL
-# Find the native GSL includes and library
-#
-#  GSL_INCLUDES    - where to find gsl/gsl_*.h, etc.
-#  GSL_LIBRARIES   - List of libraries when using GSL.
-#  GSL_FOUND       - True if GSL found.
-
-
-if (GSL_INCLUDES)
-  # Already in cache, be silent
-  set (GSL_FIND_QUIETLY TRUE)
-endif (GSL_INCLUDES)
-
-find_path (GSL_INCLUDES gsl/gsl_math.h)
-
-find_library (GSL_LIB NAMES gsl)
-
-set (GSL_CBLAS_LIB "" CACHE FILEPATH "If your program fails to link
-(usually because GSL is not automatically linking a CBLAS and no other
-component of your project provides a CBLAS) then you may need to point
-this variable to a valid CBLAS.  Usually GSL is distributed with
-libgslcblas.{a,so} (next to GSL_LIB) which you may use if an optimized
-CBLAS is unavailable.")
-
-set (GSL_LIBRARIES "${GSL_LIB}" "${GSL_CBLAS_LIB}")
-
-# handle the QUIETLY and REQUIRED arguments and set GSL_FOUND to TRUE if
-# all listed variables are TRUE
-include (FindPackageHandleStandardArgs)
-find_package_handle_standard_args (GSL DEFAULT_MSG GSL_LIBRARIES GSL_INCLUDES)
-
-mark_as_advanced (GSL_LIB GSL_CBLAS_LIB GSL_INCLUDES)
--- tvips/img2px.c.orig
+++ tvips/img2px.c
@@ -22,6 +22,7 @@
 #    include "config.h"
 #endif
 
+#include <stdbool.h>
 #include <stdlib.h>
 
 #include <err.h>
@@ -32,8 +33,7 @@
 #include <strings.h>
 #include <unistd.h> // XXX For sleep(3)
 
-#include <R_ext/Applic.h>
-#include <R_ext/Memory.h>
+typedef bool Rboolean;
 
 //#include <gsl/gsl_multimin.h>
 
@@ -1011,7 +1011,7 @@ _vmmin(int n0, double *b, double *Fmin, /* optimfn fminfn, optimgr fmingr, */
 
         if (gradproj < 0.0) {   /* search direction is downhill */
             steplength = 1.0;
-            accpoint = FALSE;
+            accpoint = false;
             do {
                 count = 0;
                 for (i = 0; i < n; i++) {
